<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taobao.zeus.dal.mapper.ZeusActionHistoryMapper">
  <resultMap id="BaseResultMap" type="com.taobao.zeus.dal.model.ZeusActionHistory">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="action_id" jdbcType="BIGINT" property="actionId" />
    <result column="job_id" jdbcType="BIGINT" property="jobId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="execute_host" jdbcType="VARCHAR" property="executeHost" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="trigger_type" jdbcType="INTEGER" property="triggerType" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="illustrate" jdbcType="VARCHAR" property="illustrate" />
    <result column="properties" jdbcType="VARCHAR" property="properties" />
    <result column="statis_end_time" jdbcType="TIMESTAMP" property="statisEndTime" />
    <result column="timezone" jdbcType="VARCHAR" property="timezone" />
    <result column="host_group_id" jdbcType="INTEGER" property="hostGroupId" />
    <result column="cycle" jdbcType="VARCHAR" property="cycle" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.taobao.zeus.dal.model.ZeusActionHistory">
    <result column="log" jdbcType="LONGVARCHAR" property="log" />
  </resultMap>

  <resultMap id="BigIdWithActionMap" type="com.taobao.zeus.dal.model.BigIdWithAction">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="action_id" jdbcType="BIGINT" property="actionId" />
  </resultMap>

  <resultMap id="ReportResultMap" type="com.taobao.zeus.dal.model.ZeusActionReport">
    <result column="action_id" jdbcType="BIGINT" property="actionId" />
    <result column="action_cnt" jdbcType="INTEGER" property="actionCnt" />
    <result column="gmt_create" jdbcType="VARCHAR" property="gmtCreate" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>

  <sql id="Base_Column_List">
    id, action_id, job_id, start_time, end_time, execute_host, operator, gmt_create, 
    gmt_modified, trigger_type, status, illustrate, properties, statis_end_time, timezone, 
    host_group_id, cycle
  </sql>
  <sql id="Blob_Column_List">
    log
  </sql>
  <sql id="common_where_if">
    <if test="actionId != null">
      action_id = #{actionId,jdbcType=BIGINT}
    </if>
    <if test="actionId != null">
      and job_id = #{actionId,jdbcType=BIGINT}
    </if>
    <if test="gmtCreate != null">
      and gmt_create = #{gmtCreate,jdbcType=VARCHAR}
    </if>
    <if test="gmtModified != null">
      and gmt_modified = #{gmtModified,jdbcType=VARCHAR}
    </if>
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zeus_action_history
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectRecent" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zeus_action_history
    where start_time = #{startTime,jdbcType=TIMESTAMP}
  </select>
  <select id="find" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zeus_action_history
    <where>
      <if test="jobId!=null and jobId!=''">
        job_id =#{jobId,jdbcType=BIGINT}
      </if>
      <if test="actionId!=null and actionId!=''">
        and action_id =#{actionId,jdbcType=BIGINT}
      </if>
    </where>
    order by id desc
    <if test="limitStart != null and limitEnd != null">limit #{limitStart}, #{limitEnd}</if>
  </select>
  <select id="countByJobId" parameterType="java.util.Map" resultType="java.lang.Integer">
    select
    count(*)
    from zeus_action_history
    <where>
      <if test="jobId!=null and jobId!=''">
        job_id =#{jobId,jdbcType=BIGINT}
      </if>
    </where>
  </select>
  <select id="findIdsWithActionId" resultMap="BigIdWithActionMap">
    select
    max(id) as id,action_id
    from zeus_action_history
    <where>
      <if test="list!=null">
        action_id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </where>
    group by action_id
    order by action_id desc
  </select>
  <select id="selectByBigIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from zeus_action_history
    <where>
      <if test="list!=null">
        id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </where>
  </select>
  <select id="selectByParams" resultMap="BaseResultMap"  parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from zeus_action_history
    <where>
    <include refid="common_where_if"/>
  </where>
  </select>
  <select id="selectSuccessReportByDate" parameterType="java.util.Map" resultMap="ReportResultMap">
    select count(distinct h.action_id) action_cnt,DATE_FORMAT(h.gmt_create,'%Y%m%d') gmt_create
    from zeus_action_history h
    left join zeus_action j on h.action_id=j.id
    where h.status='success' and trigger_type=1 and to_days(h.gmt_create) between to_days(#{startDate,jdbcType=TIMESTAMP}) and to_days(#{endDate,jdbcType=TIMESTAMP})
    group by DATE_FORMAT(h.gmt_create,'%Y%m%d')
    order by DATE_FORMAT(h.gmt_create,'%Y%m%d') desc
  </select>
  <select id="selectFailedReportByDate" parameterType="java.util.Map" resultMap="ReportResultMap">
select count(distinct h.action_id) action_cnt,DATE_FORMAT(h.gmt_create,'%Y%m%d') gmt_create
from zeus_action_history h
left join zeus_action j on h.action_id=j.id
where h.status='failed' and trigger_type=1 and to_days(h.gmt_create) between to_days(#{startDate,jdbcType=TIMESTAMP}) and to_days(#{endDate,jdbcType=TIMESTAMP})
and h.action_id not in (
select action_id from zeus_action_history where status='success' and trigger_type=1
and to_days(gmt_create) between to_days(#{startDate,jdbcType=TIMESTAMP}) and to_days(#{endDate,jdbcType=TIMESTAMP}))
group by DATE_FORMAT(h.gmt_create,'%Y%m%d') order by DATE_FORMAT(h.gmt_create,'%Y%m%d') desc
  </select>
  <select id="selectOwnerFailedReportByDate" parameterType="java.util.Map" resultMap="ReportResultMap">
select count(distinct h.action_id) as action_cnt,j.owner owner,u.name name
from zeus_action_history h
left join zeus_action j on h.action_id=j.id
left join zeus_user u on j.owner=u.uid
where h.status='failed' and h.trigger_type=1
and to_days(#{startDate,jdbcType=TIMESTAMP})=to_days(h.gmt_create)
and h.action_id not in (select action_id
from zeus_action_history
where status='success' and trigger_type=1 and to_days(#{startDate,jdbcType=TIMESTAMP})=to_days(gmt_create))
group by j.owner,u.name order by action_cnt desc limit 10
  </select>
  <select id="selectFailedActionByDate" parameterType="java.util.Map" resultMap="ReportResultMap">
select distinct h.action_id,j.name
from zeus_action_history h
left join zeus_action j on h.action_id=j.id
where h.status='failed'
and h.trigger_type=1 and to_days(#{startDate,jdbcType=TIMESTAMP}) =to_days(h.gmt_create)
and j.owner=#{owner,jdbcType=VARCHAR}
and h.action_id not in (
select action_id from zeus_action_history
where status='success' and trigger_type=1 and to_days(#{startDate,jdbcType=TIMESTAMP})=to_days(gmt_create))
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from zeus_action_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.taobao.zeus.dal.model.ZeusActionHistory">
    insert into zeus_action_history (id, action_id, job_id, 
      start_time, end_time, execute_host, 
      operator, gmt_create, gmt_modified, 
      trigger_type, status, illustrate, 
      properties, statis_end_time, timezone, 
      host_group_id, cycle, log,script
      )
    values (#{id,jdbcType=BIGINT}, #{actionId,jdbcType=BIGINT}, #{actionId,jdbcType=BIGINT},
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{executeHost,jdbcType=VARCHAR}, 
      #{operator,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{triggerType,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{illustrate,jdbcType=VARCHAR}, 
      #{properties,jdbcType=VARCHAR}, #{statisEndTime,jdbcType=TIMESTAMP}, #{timezone,jdbcType=VARCHAR}, 
      #{hostGroupId,jdbcType=INTEGER}, #{cycle,jdbcType=VARCHAR}, #{log,jdbcType=LONGVARCHAR}
      , #{script,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.taobao.zeus.dal.model.ZeusActionHistory">
    insert into zeus_action_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="actionId != null">
        action_id,
      </if>
      <if test="actionId != null">
        job_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="executeHost != null">
        execute_host,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="triggerType != null">
        trigger_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="illustrate != null">
        illustrate,
      </if>
      <if test="properties != null">
        properties,
      </if>
      <if test="statisEndTime != null">
        statis_end_time,
      </if>
      <if test="timezone != null">
        timezone,
      </if>
      <if test="hostGroupId != null">
        host_group_id,
      </if>
      <if test="cycle != null">
        cycle,
      </if>
      <if test="log != null">
        log,
      </if>
      <if test="script != null">
        script,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="actionId != null">
        #{actionId,jdbcType=BIGINT},
      </if>
      <if test="actionId != null">
        #{actionId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="executeHost != null">
        #{executeHost,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=VARCHAR},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=VARCHAR},
      </if>
      <if test="triggerType != null">
        #{triggerType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="illustrate != null">
        #{illustrate,jdbcType=VARCHAR},
      </if>
      <if test="properties != null">
        #{properties,jdbcType=VARCHAR},
      </if>
      <if test="statisEndTime != null">
        #{statisEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="timezone != null">
        #{timezone,jdbcType=VARCHAR},
      </if>
      <if test="hostGroupId != null">
        #{hostGroupId,jdbcType=INTEGER},
      </if>
      <if test="cycle != null">
        #{cycle,jdbcType=VARCHAR},
      </if>
      <if test="log != null">
        #{log,jdbcType=LONGVARCHAR},
      </if>
      <if test="script != null">
        #{script,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.taobao.zeus.dal.model.ZeusActionHistory">
    update zeus_action_history
    <set>
      <if test="actionId != null">
        action_id = #{actionId,jdbcType=BIGINT},
      </if>
      <if test="actionId != null">
        job_id = #{actionId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="executeHost != null">
        execute_host = #{executeHost,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=VARCHAR},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=VARCHAR},
      </if>
      <if test="triggerType != null">
        trigger_type = #{triggerType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="illustrate != null">
        illustrate = #{illustrate,jdbcType=VARCHAR},
      </if>
      <if test="properties != null">
        properties = #{properties,jdbcType=VARCHAR},
      </if>
      <if test="statisEndTime != null">
        statis_end_time = #{statisEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="timezone != null">
        timezone = #{timezone,jdbcType=VARCHAR},
      </if>
      <if test="hostGroupId != null">
        host_group_id = #{hostGroupId,jdbcType=INTEGER},
      </if>
      <if test="cycle != null">
        cycle = #{cycle,jdbcType=VARCHAR},
      </if>
      <if test="log != null">
        log = #{log,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.taobao.zeus.dal.model.ZeusActionHistory">
    update zeus_action_history
    set action_id = #{actionId,jdbcType=BIGINT},
      job_id = #{actionId,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      execute_host = #{executeHost,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      trigger_type = #{triggerType,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      illustrate = #{illustrate,jdbcType=VARCHAR},
      properties = #{properties,jdbcType=VARCHAR},
      statis_end_time = #{statisEndTime,jdbcType=TIMESTAMP},
      timezone = #{timezone,jdbcType=VARCHAR},
      host_group_id = #{hostGroupId,jdbcType=INTEGER},
      cycle = #{cycle,jdbcType=VARCHAR},
      log = #{log,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taobao.zeus.dal.model.ZeusActionHistory">
    update zeus_action_history
    set action_id = #{actionId,jdbcType=BIGINT},
      job_id = #{actionId,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      execute_host = #{executeHost,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      trigger_type = #{triggerType,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      illustrate = #{illustrate,jdbcType=VARCHAR},
      properties = #{properties,jdbcType=VARCHAR},
      statis_end_time = #{statisEndTime,jdbcType=TIMESTAMP},
      timezone = #{timezone,jdbcType=VARCHAR},
      host_group_id = #{hostGroupId,jdbcType=INTEGER},
      cycle = #{cycle,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>