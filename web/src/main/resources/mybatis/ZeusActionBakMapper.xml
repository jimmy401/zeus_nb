<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taobao.zeus.dal.mapper.ZeusActionBakMapper">
  <resultMap id="BaseResultMap" type="com.taobao.zeus.dal.model.ZeusActionBak">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="auto" jdbcType="INTEGER" property="auto" />
    <result column="cron_expression" jdbcType="VARCHAR" property="cronExpression" />
    <result column="cycle" jdbcType="VARCHAR" property="cycle" />
    <result column="dependencies" jdbcType="VARCHAR" property="dependencies" />
    <result column="descr" jdbcType="VARCHAR" property="descr" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="history_id" jdbcType="BIGINT" property="historyId" />
    <result column="host" jdbcType="VARCHAR" property="host" />
    <result column="host_group_id" jdbcType="INTEGER" property="hostGroupId" />
    <result column="job_dependencies" jdbcType="VARCHAR" property="jobDependencies" />
    <result column="last_end_time" jdbcType="TIMESTAMP" property="lastEndTime" />
    <result column="last_result" jdbcType="VARCHAR" property="lastResult" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="offset" jdbcType="INTEGER" property="offset" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="post_processers" jdbcType="VARCHAR" property="postProcessers" />
    <result column="pre_processers" jdbcType="VARCHAR" property="preProcessers" />
    <result column="ready_dependency" jdbcType="VARCHAR" property="readyDependency" />
    <result column="run_type" jdbcType="VARCHAR" property="runType" />
    <result column="schedule_type" jdbcType="INTEGER" property="scheduleType" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="start_timestamp" jdbcType="BIGINT" property="startTimestamp" />
    <result column="statis_end_time" jdbcType="TIMESTAMP" property="statisEndTime" />
    <result column="statis_start_time" jdbcType="TIMESTAMP" property="statisStartTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="timezone" jdbcType="VARCHAR" property="timezone" />
    <result column="job_id" jdbcType="BIGINT" property="jobId" />
    <result column="store_time" jdbcType="TIMESTAMP" property="storeTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.taobao.zeus.dal.model.ZeusActionBakWithBLOBs">
    <result column="configs" jdbcType="LONGVARCHAR" property="configs" />
    <result column="resources" jdbcType="LONGVARCHAR" property="resources" />
  </resultMap>
  <sql id="Base_Column_List">
    id, auto, cron_expression, cycle, dependencies, descr, gmt_create, gmt_modified, 
    group_id, history_id, host, host_group_id, job_dependencies, last_end_time, last_result, 
    name, offset, owner, post_processers, pre_processers, ready_dependency, run_type, 
    schedule_type, start_time, start_timestamp, statis_end_time, statis_start_time, status, 
    timezone, job_id, store_time
  </sql>
  <sql id="Blob_Column_List">
    configs, resources
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from zeus_action_bak
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from zeus_action_bak
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.taobao.zeus.dal.model.ZeusActionBakWithBLOBs">
    insert into zeus_action_bak (id, auto, cron_expression, 
      cycle, dependencies, descr, 
      gmt_create, gmt_modified, group_id, 
      history_id, host, host_group_id, 
      job_dependencies, last_end_time, last_result, 
      name, offset, owner, 
      post_processers, pre_processers, ready_dependency, 
      run_type, schedule_type, start_time, 
      start_timestamp, statis_end_time, statis_start_time, 
      status, timezone, job_id, 
      store_time, configs, resources
      )
    values (#{id,jdbcType=BIGINT}, #{auto,jdbcType=INTEGER}, #{cronExpression,jdbcType=VARCHAR}, 
      #{cycle,jdbcType=VARCHAR}, #{dependencies,jdbcType=VARCHAR}, #{descr,jdbcType=VARCHAR}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{groupId,jdbcType=INTEGER}, 
      #{historyId,jdbcType=BIGINT}, #{host,jdbcType=VARCHAR}, #{hostGroupId,jdbcType=INTEGER}, 
      #{jobDependencies,jdbcType=VARCHAR}, #{lastEndTime,jdbcType=TIMESTAMP}, #{lastResult,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{offset,jdbcType=INTEGER}, #{owner,jdbcType=VARCHAR}, 
      #{postProcessers,jdbcType=VARCHAR}, #{preProcessers,jdbcType=VARCHAR}, #{readyDependency,jdbcType=VARCHAR}, 
      #{runType,jdbcType=VARCHAR}, #{scheduleType,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{startTimestamp,jdbcType=BIGINT}, #{statisEndTime,jdbcType=TIMESTAMP}, #{statisStartTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{timezone,jdbcType=VARCHAR}, #{jobId,jdbcType=BIGINT},
      #{storeTime,jdbcType=TIMESTAMP}, #{configs,jdbcType=LONGVARCHAR}, #{resources,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.taobao.zeus.dal.model.ZeusActionBakWithBLOBs">
    insert into zeus_action_bak
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="auto != null">
        auto,
      </if>
      <if test="cronExpression != null">
        cron_expression,
      </if>
      <if test="cycle != null">
        cycle,
      </if>
      <if test="dependencies != null">
        dependencies,
      </if>
      <if test="descr != null">
        descr,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="historyId != null">
        history_id,
      </if>
      <if test="host != null">
        host,
      </if>
      <if test="hostGroupId != null">
        host_group_id,
      </if>
      <if test="jobDependencies != null">
        job_dependencies,
      </if>
      <if test="lastEndTime != null">
        last_end_time,
      </if>
      <if test="lastResult != null">
        last_result,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="offset != null">
        offset,
      </if>
      <if test="owner != null">
        owner,
      </if>
      <if test="postProcessers != null">
        post_processers,
      </if>
      <if test="preProcessers != null">
        pre_processers,
      </if>
      <if test="readyDependency != null">
        ready_dependency,
      </if>
      <if test="runType != null">
        run_type,
      </if>
      <if test="scheduleType != null">
        schedule_type,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="startTimestamp != null">
        start_timestamp,
      </if>
      <if test="statisEndTime != null">
        statis_end_time,
      </if>
      <if test="statisStartTime != null">
        statis_start_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="timezone != null">
        timezone,
      </if>
      <if test="jobId != null">
        job_id,
      </if>
      <if test="storeTime != null">
        store_time,
      </if>
      <if test="configs != null">
        configs,
      </if>
      <if test="resources != null">
        resources,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="auto != null">
        #{auto,jdbcType=INTEGER},
      </if>
      <if test="cronExpression != null">
        #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="cycle != null">
        #{cycle,jdbcType=VARCHAR},
      </if>
      <if test="dependencies != null">
        #{dependencies,jdbcType=VARCHAR},
      </if>
      <if test="descr != null">
        #{descr,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=VARCHAR},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="historyId != null">
        #{historyId,jdbcType=BIGINT},
      </if>
      <if test="host != null">
        #{host,jdbcType=VARCHAR},
      </if>
      <if test="hostGroupId != null">
        #{hostGroupId,jdbcType=INTEGER},
      </if>
      <if test="jobDependencies != null">
        #{jobDependencies,jdbcType=VARCHAR},
      </if>
      <if test="lastEndTime != null">
        #{lastEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastResult != null">
        #{lastResult,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="offset != null">
        #{offset,jdbcType=INTEGER},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=VARCHAR},
      </if>
      <if test="postProcessers != null">
        #{postProcessers,jdbcType=VARCHAR},
      </if>
      <if test="preProcessers != null">
        #{preProcessers,jdbcType=VARCHAR},
      </if>
      <if test="readyDependency != null">
        #{readyDependency,jdbcType=VARCHAR},
      </if>
      <if test="runType != null">
        #{runType,jdbcType=VARCHAR},
      </if>
      <if test="scheduleType != null">
        #{scheduleType,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTimestamp != null">
        #{startTimestamp,jdbcType=BIGINT},
      </if>
      <if test="statisEndTime != null">
        #{statisEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statisStartTime != null">
        #{statisStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="timezone != null">
        #{timezone,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null">
        #{jobId,jdbcType=BIGINT},
      </if>
      <if test="storeTime != null">
        #{storeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="configs != null">
        #{configs,jdbcType=LONGVARCHAR},
      </if>
      <if test="resources != null">
        #{resources,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.taobao.zeus.dal.model.ZeusActionBakWithBLOBs">
    update zeus_action_bak
    <set>
      <if test="auto != null">
        auto = #{auto,jdbcType=INTEGER},
      </if>
      <if test="cronExpression != null">
        cron_expression = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="cycle != null">
        cycle = #{cycle,jdbcType=VARCHAR},
      </if>
      <if test="dependencies != null">
        dependencies = #{dependencies,jdbcType=VARCHAR},
      </if>
      <if test="descr != null">
        descr = #{descr,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=VARCHAR},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="historyId != null">
        history_id = #{historyId,jdbcType=BIGINT},
      </if>
      <if test="host != null">
        host = #{host,jdbcType=VARCHAR},
      </if>
      <if test="hostGroupId != null">
        host_group_id = #{hostGroupId,jdbcType=INTEGER},
      </if>
      <if test="jobDependencies != null">
        job_dependencies = #{jobDependencies,jdbcType=VARCHAR},
      </if>
      <if test="lastEndTime != null">
        last_end_time = #{lastEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastResult != null">
        last_result = #{lastResult,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="offset != null">
        offset = #{offset,jdbcType=INTEGER},
      </if>
      <if test="owner != null">
        owner = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="postProcessers != null">
        post_processers = #{postProcessers,jdbcType=VARCHAR},
      </if>
      <if test="preProcessers != null">
        pre_processers = #{preProcessers,jdbcType=VARCHAR},
      </if>
      <if test="readyDependency != null">
        ready_dependency = #{readyDependency,jdbcType=VARCHAR},
      </if>
      <if test="runType != null">
        run_type = #{runType,jdbcType=VARCHAR},
      </if>
      <if test="scheduleType != null">
        schedule_type = #{scheduleType,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTimestamp != null">
        start_timestamp = #{startTimestamp,jdbcType=BIGINT},
      </if>
      <if test="statisEndTime != null">
        statis_end_time = #{statisEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statisStartTime != null">
        statis_start_time = #{statisStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="timezone != null">
        timezone = #{timezone,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=BIGINT},
      </if>
      <if test="storeTime != null">
        store_time = #{storeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="configs != null">
        configs = #{configs,jdbcType=LONGVARCHAR},
      </if>
      <if test="resources != null">
        resources = #{resources,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.taobao.zeus.dal.model.ZeusActionBakWithBLOBs">
    update zeus_action_bak
    set auto = #{auto,jdbcType=INTEGER},
      cron_expression = #{cronExpression,jdbcType=VARCHAR},
      cycle = #{cycle,jdbcType=VARCHAR},
      dependencies = #{dependencies,jdbcType=VARCHAR},
      descr = #{descr,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      group_id = #{groupId,jdbcType=INTEGER},
      history_id = #{historyId,jdbcType=BIGINT},
      host = #{host,jdbcType=VARCHAR},
      host_group_id = #{hostGroupId,jdbcType=INTEGER},
      job_dependencies = #{jobDependencies,jdbcType=VARCHAR},
      last_end_time = #{lastEndTime,jdbcType=TIMESTAMP},
      last_result = #{lastResult,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      offset = #{offset,jdbcType=INTEGER},
      owner = #{owner,jdbcType=VARCHAR},
      post_processers = #{postProcessers,jdbcType=VARCHAR},
      pre_processers = #{preProcessers,jdbcType=VARCHAR},
      ready_dependency = #{readyDependency,jdbcType=VARCHAR},
      run_type = #{runType,jdbcType=VARCHAR},
      schedule_type = #{scheduleType,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      start_timestamp = #{startTimestamp,jdbcType=BIGINT},
      statis_end_time = #{statisEndTime,jdbcType=TIMESTAMP},
      statis_start_time = #{statisStartTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      timezone = #{timezone,jdbcType=VARCHAR},
      job_id = #{jobId,jdbcType=BIGINT},
      store_time = #{storeTime,jdbcType=TIMESTAMP},
      configs = #{configs,jdbcType=LONGVARCHAR},
      resources = #{resources,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taobao.zeus.dal.model.ZeusActionBak">
    update zeus_action_bak
    set auto = #{auto,jdbcType=INTEGER},
      cron_expression = #{cronExpression,jdbcType=VARCHAR},
      cycle = #{cycle,jdbcType=VARCHAR},
      dependencies = #{dependencies,jdbcType=VARCHAR},
      descr = #{descr,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      group_id = #{groupId,jdbcType=INTEGER},
      history_id = #{historyId,jdbcType=BIGINT},
      host = #{host,jdbcType=VARCHAR},
      host_group_id = #{hostGroupId,jdbcType=INTEGER},
      job_dependencies = #{jobDependencies,jdbcType=VARCHAR},
      last_end_time = #{lastEndTime,jdbcType=TIMESTAMP},
      last_result = #{lastResult,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      offset = #{offset,jdbcType=INTEGER},
      owner = #{owner,jdbcType=VARCHAR},
      post_processers = #{postProcessers,jdbcType=VARCHAR},
      pre_processers = #{preProcessers,jdbcType=VARCHAR},
      ready_dependency = #{readyDependency,jdbcType=VARCHAR},
      run_type = #{runType,jdbcType=VARCHAR},
      schedule_type = #{scheduleType,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      start_timestamp = #{startTimestamp,jdbcType=BIGINT},
      statis_end_time = #{statisEndTime,jdbcType=TIMESTAMP},
      statis_start_time = #{statisStartTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      timezone = #{timezone,jdbcType=VARCHAR},
      job_id = #{jobId,jdbcType=BIGINT},
      store_time = #{storeTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>